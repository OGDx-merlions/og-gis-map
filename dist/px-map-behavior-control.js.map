{"version":3,"sources":["px-map-behavior-control.es6.js"],"names":["window","PxMapBehavior","ControlImpl","properties","position","type","String","value","observer","addInst","parent","elementInst","addTo","removeInst","remove","getInstOptions","_getValidPosition","positionIsValid","test","console","log","is","Control","Layer","ZoomControlImpl","language","resources","Object","createInst","options","PxMap","ZoomControl","updateInst","lastOptions","nextOptions","setPosition","call","zoomInText","zoomOutText","localize","zoomInTitle","zoomOutTitle","Polymer","AppLocalizeBehavior","ScaleControlImpl","imperialUnits","Boolean","metricUnits","reverseColors","ScaleControl","setReverseColors","metric","showMetric","imperial","showImperial","LocateControlImpl","locateTitle","moveToLocation","moveMaxZoom","Number","lastFoundLocation","notify","foundFn","_handleLocationFound","bind","errorFn","_handleLocationError","tapFn","_handleLocationTap","bindEvents","LocateControl","setMoveMaxZoom","locateIcon","evt","detail","lat","latitude","lng","longitude","timestamp","bounds","accuracy","getCenter","getNorthWest","distanceTo","getNorthEast","fire","set","notifyPath","message","action","map","__scaleContainer","L","DomUtil","addClass","shouldReverse","removeClass","shouldShowImperial","_iScale","create","_update","shouldShowMetric","_mScale","Scale","e","_map","src","Zoom","defaultOptions","className","locateTimeout","composedOptions","assign","Util","setOptions","locateName","__container","__locateButton","_createButton","DomEvent","on","_locationFound","_locationError","disableClickPropagation","stop","_locate","_refocusOnMap","off","zoom","length","isNaN","parseInt","undefined","locate","__locating","setView","maxZoom","timeout","_setLocatingState","_setReadyState","__disabled","html","title","container","clickFn","buttonEl","innerHTML","href","setAttribute","_updateDisabled"],"mappings":"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","file":"px-map-behavior-control.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2018, General Electric\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function() {\n  'use strict';\n\n  /****************************************************************************\n   * BEHAVIORS\n   ****************************************************************************/\n\n  /* Ensures the behavior namespace is created */\n  window.PxMapBehavior = (window.PxMapBehavior || {});\n\n  /**\n   *\n   * @polymerBehavior PxMapBehavior.Control\n   */\n  PxMapBehavior.ControlImpl = {\n    properties: {\n      /**\n       * Positions the control in one of the map corners. Choose from 'topright',\n       * 'topleft', 'bottomright', or 'bottomleft'.\n       *\n       * @type {String}\n       */\n      position: {\n        type: String,\n        value: 'bottomright',\n        observer: 'shouldUpdateInst'\n      }\n    },\n\n    addInst(parent) {\n      this.elementInst.addTo(parent);\n    },\n\n    removeInst(parent) {\n      this.elementInst.remove();\n    },\n\n    getInstOptions() {\n      return {\n        position: this._getValidPosition()\n      }\n    },\n\n    _getValidPosition() {\n      const positionIsValid = (/^(topright|topleft|bottomright|bottomleft)$/.test(this.position));\n\n      if (!positionIsValid) {\n        console.log(`PX-MAP CONFIGURATION ERROR:\n          You entered an invalid \\`position\\` attribute '${this.position}' for ${this.is}.\n          Position must be a string with one of the following values:\n          - 'topright'\n          - 'topleft'\n          - 'bottomright'\n          - 'bottomleft'\n          Defaulting to 'bottomright'.`);\n\n        return 'bottomright';\n      }\n\n      return this.position;\n    }\n  };\n  /* Bind Control behavior */\n  /** @polymerBehavior */\n  PxMapBehavior.Control = [\n    PxMapBehavior.Layer,\n    PxMapBehavior.ControlImpl\n  ];\n\n  /**\n   *\n   * @polymerBehavior PxMapBehavior.ZoomControl\n   */\n  PxMapBehavior.ZoomControlImpl = {\n    properties: {\n      /**\n       * A valid IETF language tag as a string that `app-localize-behavior` will\n       * use to localize this component (see https://en.wikipedia.org/wiki/IETF_language_tag)\n       * for a list of valid tags.\n       *\n       * Examples:\n       * - 'en' (English)\n       * - 'es' (Spanish)\n       * - 'zh-cn' (Simplified Chinese)\n       *\n       * See https://github.com/PolymerElements/app-localize-behavior for API\n       * documentation and more information.\n       *\n       * @type {String}\n       */\n      language: {\n        type: String,\n        value: 'en'\n      },\n\n      /**\n       * Object providing localized strings that `app-localize-behavior` will use\n       * to localize this component. The first key should be a valid IETF language\n       * tag, followed by key/value pairs for each string you need to localize.\n       * Settings can also be loaded from a locales.json file at the app level.\n       *\n       * For this component, the following keys can be localized:\n       * - 'Zoom in' - [en default] 'Zoom in'\n       * - 'Zoom out' - [en default] 'Zoom out'\n       *\n       * See https://github.com/PolymerElements/app-localize-behavior for API\n       * documentation and more information.\n       *\n       * @type {Object}\n       */\n      resources: {\n        type: Object,\n        value: function() {\n          return {\n            'en': {'Zoom in': 'Zoom in', 'Zoom out': 'Zoom out'}\n          };\n        }\n      }\n    },\n\n    createInst(options) {\n      return new PxMap.ZoomControl(options);\n    },\n\n    updateInst(lastOptions, nextOptions) {\n      if (lastOptions.position !== nextOptions.position) {\n        this.elementInst.setPosition(nextOptions.position);\n      }\n    },\n\n    getInstOptions() {\n      const options = PxMapBehavior.ControlImpl.getInstOptions.call(this);\n\n      options.position = this.position;\n\n      options.zoomInText = '<px-icon icon=\"px-utl:add\"></px-icon>'\n      options.zoomOutText = '<px-icon icon=\"px-utl:remove\"></px-icon>'\n\n      // @TODO: An import order issue with the `AppLocalizeBehavior` mixin can\n      // cause the zoom control not to draw. Check if this.localize exists\n      // and can be called before doing so.\n      if (typeof this.localize === 'function') {\n        options.zoomInTitle = this.localize('Zoom in');\n        options.zoomOutTitle =  this.localize('Zoom out');\n      }\n\n      return options;\n    }\n  };\n  /* Bind ZoomControl behavior */\n  /** @polymerBehavior */\n  PxMapBehavior.ZoomControl = [\n    Polymer.AppLocalizeBehavior,\n    PxMapBehavior.Control,\n    PxMapBehavior.ZoomControlImpl\n  ];\n\n  /**\n   *\n   * @polymerBehavior PxMapBehavior.ScaleControl\n   */\n  PxMapBehavior.ScaleControlImpl = {\n    properties: {\n      /**\n       * Shows an imperial unit scale (ft/mi) line if enabled. Multiple unit scales\n       * can be enabled to show multiple scales. If no units are enabled,\n       * the scale cannot be drawn.\n       *\n       * @type {Boolean}\n       */\n      imperialUnits: {\n        type: Boolean,\n        value: false,\n        observer: 'shouldUpdateInst'\n      },\n\n      /**\n       * Shows a metric unit scale (m/km) line if enabled. Multiple unit scales\n       * can be enabled to show multiple scales. If no units are enabled,\n       * the scale cannot be drawn.\n       *\n       * @type {Boolean}\n       */\n      metricUnits: {\n        type: Boolean,\n        value: false,\n        observer: 'shouldUpdateInst'\n      },\n\n      /**\n       * Enable this property to reverse the scale's colors, making it\n       * easier to read against a dark tile layer.\n       *\n       * @type {Boolean}\n       */\n      reverseColors: {\n        type: Boolean,\n        value: false,\n        observer: 'shouldUpdateInst'\n      }\n    },\n\n    createInst(options) {\n      return new PxMap.ScaleControl(options);\n    },\n\n    updateInst(lastOptions, nextOptions) {\n      if (lastOptions.position !== nextOptions.position) {\n        this.elementInst.setPosition(nextOptions.position);\n      }\n      if (lastOptions.reverseColors !== nextOptions.reverseColors) {\n        this.elementInst.setReverseColors(nextOptions.reverseColors);\n      }\n      if (lastOptions.metric !== nextOptions.metric) {\n        this.elementInst.showMetric(nextOptions.metric);\n      }\n      if (lastOptions.imperial !== nextOptions.imperial) {\n        this.elementInst.showImperial(nextOptions.imperial);\n      }\n    },\n\n    getInstOptions() {\n      const options = PxMapBehavior.ControlImpl.getInstOptions.call(this);\n\n      options.imperial = this.imperialUnits;\n      options.metric = this.metricUnits;\n      options.reverseColors = this.reverseColors;\n\n      return options;\n    }\n  };\n  /* Bind ScaleControl behavior */\n  /** @polymerBehavior */\n  PxMapBehavior.ScaleControl = [\n    PxMapBehavior.Control,\n    PxMapBehavior.ScaleControlImpl\n  ];\n\n  /**\n   *\n   * @polymerBehavior PxMapBehavior.LocateControl\n   */\n  PxMapBehavior.LocateControlImpl = {\n    properties: {\n      /**\n       * A title for the locate button. Will be used to inform users with\n       * screen reading devices what the button does.\n       *\n       * @type {String}\n       */\n      locateTitle: {\n        type: String,\n        value: 'Zoom to your location',\n        observer: 'shouldUpdateInst'\n      },\n\n      /**\n       * If enabled, the map will set its view center to the user's current\n       * location after a successful locate browser API call.\n       *\n       * @type {Boolean}\n       */\n      moveToLocation: {\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * The maximum zoom level to set when the map moves to the user's location.\n       * The `moveToLocation` attribute must also be set for the map to move to the\n       * user's location after a location event.\n       *\n       * @type {Number}\n       */\n      moveMaxZoom: {\n        type: Number,\n        observer: 'shouldUpdateInst'\n      },\n\n      /**\n       * After the user's location is successfully found, the result will be\n       * placed here. The object will have the following keys:\n       *\n       * - {Number} `lat` - User's found latitude\n       * - {Number} `lng` - User's found longitude\n       * - {Number} `timestamp` - Timestamp (UNIX format) for the location event\n       * - {Number} `accuracy` - The accuracy margin of error in meters from the centerpoint\n       * - {L.LatLngBouds} `bounds` - A bounding rectangle detailing the accuracy of the location\n       *\n       * @type {Object}\n       */\n      lastFoundLocation: {\n        type: Object,\n        value: function(){ return {}; },\n        notify: true\n      }\n    },\n\n    addInst(parent) {\n      PxMapBehavior.ControlImpl.addInst.call(this, parent);\n\n      // Bind custom events for this control. Events will be unbound automatically.\n      const foundFn = this._handleLocationFound.bind(this);\n      const errorFn = this._handleLocationError.bind(this);\n      const tapFn = this._handleLocationTap.bind(this);\n      this.bindEvents({\n        'locationfound' : foundFn,\n        'locationerror' : errorFn,\n        'controlclick' : tapFn\n      });\n    },\n\n    removeInst(parent) {\n      PxMapBehavior.ControlImpl.removeInst.call(this, parent);\n\n      // Unbind events if necessary...\n    },\n\n    createInst(options) {\n      return new PxMap.LocateControl(options);\n    },\n\n    updateInst(lastOptions, nextOptions) {\n      if (lastOptions.position !== nextOptions.position) {\n        this.elementInst.setPosition(nextOptions.position);\n      }\n      if (lastOptions.moveMaxZoom !== nextOptions.moveMaxZoom) {\n        this.elementInst.setMoveMaxZoom(nextOptions.moveMaxZoom);\n      }\n    },\n\n    getInstOptions() {\n      return {\n        position: this.position,\n        locateIcon: '<px-icon icon=\"px-vis:crosshair\"></px-icon>',\n        locateTitle: this.locateTitle,\n        moveToLocation: this.moveToLocation,\n        moveMaxZoom: this.moveMaxZoom\n      };\n    },\n\n    /**\n     * Bound to the control instance's `locationfound` event. Called when that\n     * event is fired. Parses the event details and fires an event from this\n     * component that the developer can handle. Also sets the `lastFoundLocation`\n     * property and notifies it.\n     */\n    _handleLocationFound(evt) {\n      if (!evt) return;\n\n      const detail = {\n        lat: evt.latitude || null,\n        lng: evt.longitude || null,\n        timestamp: evt.timestamp || null,\n        bounds: evt.bounds || null\n      };\n\n      // Attempt to calculate the distance in meters from the center\n      // of the bounds to its NorthWest extent. This is our accuracy.\n      detail.accuracy = (evt.bounds.getCenter() && evt.bounds.getNorthWest()) ? evt.bounds.getCenter().distanceTo(evt.bounds.getNorthEast()) : null;\n\n      this.fire('px-map-control-locate-succeeded', detail);\n\n      this.set('lastFoundLocation', detail);\n      this.notifyPath('lastFoundLocation.*');\n    },\n    /**\n     * Fired after the user's location is successfully found.\n     *\n     * @event px-map-control-locate-succeeded\n     * @param {Object} detail\n     * @param {Number} detail.lat - The user's found latitude\n     * @param {Number} detail.lng - The user's found longitude\n     * @param {Number} detail.timestamp - The UNIX formatted timestamp detailing when  the location was found\n     * @param {L.LatLngBouds} [detail.bounds] - A custom Leaflet object describing the visible bounds of the map after moving to the user's location, if available\n     * @param {Number} [detail.accuracy] - The margin of error of the accuracy in meters from its centerpoint to its maximum extent\n     */\n\n    /**\n     * Bound to the control instance's `locationerror` event. Called when that\n     * event is fired. Parses the event details and fires an event from this\n     * component that the developer can handle.\n     */\n    _handleLocationError(evt) {\n      if (!evt) return;\n\n      const detail = {\n        message: evt.message || null\n      };\n\n      this.fire('px-map-control-locate-failed', detail);\n    },\n    /**\n     * Fired after the control fails to find the user's location.\n     *\n     * @event px-map-control-locate-failed\n     * @param {Object} detail\n     * @param {String} detail.message - A message describing the reason for the failure\n     */\n\n     /**\n      * Bound to the control instance's `controlclick` event. Called when that\n      * event is fired, but only handles the event if its `evt.action` is 'locate'.\n      * Fires an event from this component that the developer can handle.\n      */\n    _handleLocationTap(evt) {\n      if (!evt || evt.action !== 'locate') return;\n\n      this.fire('px-map-locate-button-tapped');\n    }\n    /**\n     * Fired when the user clicks the locate button and initiates a location search.\n     *\n     * @event px-map-locate-button-tapped\n     */\n  };\n  /* Bind LocateControl behavior */\n  /** @polymerBehavior */\n  PxMapBehavior.LocateControl = [\n    PxMapBehavior.Control,\n    PxMapBehavior.LocateControlImpl\n  ];\n\n  /****************************************************************************\n   * KLASSES\n   ****************************************************************************/\n\n  /* Ensures the klass namespace is created */\n  window.PxMap = (window.PxMap || {});\n\n  /**\n   *\n   * @class PxMap.ScaleControl\n   */\n  class ScaleControl extends L.Control.Scale {\n    initialize(options) {\n      super.initialize(options);\n    }\n\n    onAdd(map) {\n      // Call default `onAdd` for scale to get the container\n      this.__scaleContainer = super.onAdd(map);\n\n      // Determine if we should add the reverse modifier CSS class\n      if (this.options.reverseColors === true) {\n        L.DomUtil.addClass(this.__scaleContainer, 'leaflet-control-scale--reverse');\n      }\n\n      return this.__scaleContainer;\n    }\n\n    onRemove(map) {\n      super.onRemove(map);\n\n      // Clean up scaleContainer reference\n      this.__scaleContainer = null;\n    }\n\n    /**\n     * Updates the `reverseColors` setting for the scale control. If the\n     * `shouldReverse` param doesn't match the current classes on the\n     * scale, updates the scale with the necessary classes.\n     *\n     * @param {Boolean} shouldReverse - If `true`, scale should be reversed. If `false`, it should not be.\n     */\n    setReverseColors(shouldReverse) {\n      if (!this.__scaleContainer) return;\n\n      if (shouldReverse && !this.options.reverseColors) {\n        this.options.reverseColors = true;\n        L.DomUtil.addClass(this.__scaleContainer, 'leaflet-control-scale--reverse');\n      }\n\n      if (!shouldReverse && this.options.reverseColors) {\n        this.options.reverseColors = false;\n        L.DomUtil.removeClass(this.__scaleContainer, 'leaflet-control-scale--reverse');\n      }\n    }\n\n    /**\n     * Shows or hides the imperial unit scale.\n     *\n     * @param {Boolean} shouldShowImperial - If `true`, ensures imperial unit scale is visible.\n     */\n    showImperial(shouldShowImperial) {\n      if (!this.__scaleContainer) return;\n\n      // No imperial scale exists, create one\n      if (shouldShowImperial && !this.options.imperial && !this._iScale) {\n        this._iScale = L.DomUtil.create('div', 'leaflet-control-scale-line', this.__scaleContainer);\n        this.options.imperial = true;\n      }\n\n      // We should remove the existing imperial scale\n      if (!shouldShowImperial && this.options.imperial && this._iScale) {\n        this.options.imperial = false;\n        L.DomUtil.remove(this._iScale);\n        this._iScale = null;\n      }\n\n      // Update the scale\n      this._update();\n    }\n\n    /**\n     * Shows or hides the metric unit scale.\n     *\n     * @param {Boolean} shouldShowMetric - If `true`, ensures metric unit scale is visible.\n     */\n    showMetric(shouldShowMetric) {\n      if (!this.__scaleContainer) return;\n\n      // No metric scale exists, create one\n      if (shouldShowMetric && !this.options.metric && !this._mScale) {\n        this._mScale =  L.DomUtil.create('div', 'leaflet-control-scale-line', this.__scaleContainer);\n        this.options.metric = true;\n      }\n\n      // We should remove the existing metric scale\n      if (!shouldShowMetric && this.options.metric && this._mScale) {\n        this.options.metric = false;\n        L.DomUtil.remove(this._mScale);\n        this._mScale = null;\n      }\n\n      // Update the scale\n      this._update();\n    }\n\n  };\n  /* Bind ScaleControl klass */\n  PxMap.ScaleControl = ScaleControl;\n\n  /**\n   *\n   * @class PxMap.ZoomControl\n   */\n  class ZoomControl extends L.Control.Zoom {\n    _zoomIn(e) {\n      super._zoomIn(e);\n\n      if (this._map && this._map.fire) {\n        this._map.fire('controlclick', {\n          src: this,\n          action: 'zoomin'\n        })\n      }\n    }\n\n    _zoomOut(e) {\n      super._zoomOut(e);\n\n      if (this._map && this._map.fire) {\n        this._map.fire('controlclick', {\n          src: this,\n          action: 'zoomout'\n        });\n      }\n    }\n\n    _fireZoomClickEvt(evt) {\n    }\n  };\n  /* Bind ZoomControl klass */\n  PxMap.ZoomControl = ZoomControl;\n\n  /**\n   *\n   * @class PxMap.LocateControl\n   */\n  class LocateControl extends L.Control {\n    initialize(options={}) {\n      const defaultOptions = {\n        position: 'bottomright',\n        className: '',\n        locateIcon: '<px-icon icon=\"px-utl:location\"></px-icon>',\n        locateTitle: 'Zoom to your location',\n        locateTimeout: 10000,\n        moveToLocation: true,\n        moveMaxZoom: null\n      };\n      const composedOptions = Object.assign(defaultOptions, options);\n      L.Util.setOptions(this, composedOptions);\n    }\n\n    onAdd(map) {\n      const locateName = 'leaflet-control-locate';\n      this.__container = L.DomUtil.create('div', `${locateName} leaflet-bar ${this.options.className}`);\n      this.__locateButton = this._createButton(this.options.locateIcon, this.options.locateTitle, 'leaflet-control-locate-button', this.__container);\n\n      /* Bind map events */\n      L.DomEvent.on(map, 'locationfound', this._locationFound, this);\n      L.DomEvent.on(map, 'locationerror', this._locationError, this);\n\n      /* Bind button events */\n      L.DomEvent.disableClickPropagation(this.__locateButton);\n      L.DomEvent.on(this.__locateButton, 'click', L.DomEvent.stop);\n      L.DomEvent.on(this.__locateButton, 'click', this._locate, this);\n      L.DomEvent.on(this.__locateButton, 'click', this._refocusOnMap, this);\n\n      return this.__container;\n    }\n\n    onRemove(map) {\n      /* Unbind map events */\n      L.DomEvent.off(map, 'locationfound', this._locationFound, this);\n      L.DomEvent.off(map, 'locationerror', this._locationError, this);\n\n      /* Unbind button events */\n      L.DomEvent.off(this.__locateButton, 'click', L.DomEvent.stop);\n      L.DomEvent.off(this.__locateButton, 'click', this._locate, this);\n      L.DomEvent.off(this.__locateButton, 'click', this._refocusOnMap, this);\n    }\n\n    /**\n     * Sets the max zoom level after location is found\n     *\n     * @param {Number|String} zoom\n     */\n    setMoveMaxZoom(zoom) {\n      if (typeof zoom === 'string' && zoom.length && !isNaN(zoom)) {\n        zoom = parseInt(zoom);\n      }\n      if (typeof zoom === 'number' && this.options.moveMaxZoom !== zoom) {\n        this.options.moveMaxZoom = zoom;\n      }\n    }\n\n    on(...args) {\n      if (!this._map) {\n        return undefined;\n      }\n      return this._map.on(...args);\n    }\n\n    off(...args) {\n      if (!this._map) {\n        return undefined;\n      }\n      return this._map.off(...args);\n    }\n\n    /**\n     * Internal method that calls the public `locate` method and fires an event\n     * to notify that the button has been clicked.\n     */\n    _locate(evt) {\n      this._map.fire('controlclick', {\n        src: this,\n        action: 'locate'\n      });\n      this.locate(evt);\n    }\n\n    locate() {\n      this.__locating = true;\n      this._map.locate({\n        setView: this.options.moveToLocation,\n        maxZoom: this.options.moveMaxZoom,\n        timeout: this.options.locateTimeout\n      });\n      this._setLocatingState();\n    }\n\n    reset() {\n      this._setReadyState();\n    }\n\n    isDisabled() {\n      return this.__disabled || false;\n    }\n\n    _createButton(html, title, className, container, clickFn) {\n      const buttonEl = L.DomUtil.create('a', className, container);\n      buttonEl.innerHTML = html;\n      buttonEl.href = '#';\n      buttonEl.title = title;\n\n      // Tells screen readers to treat this as a button and read its title\n      buttonEl.setAttribute('role', 'button');\n      buttonEl.setAttribute('aria-label', title);\n\n      return buttonEl;\n    }\n\n    _locationFound(evt) {\n      if (this.__locating) {\n        this.__locating = false;\n        this._setReadyState();\n      }\n    }\n\n    _locationError(evt) {\n      if (this.__locating) {\n        this.__locating = false;\n        this._setReadyState();\n      }\n    }\n\n    _setLocatingState() {\n      if (!this.__locateButton || !this.__locating) return;\n\n      L.DomUtil.addClass(this.__locateButton, 'leaflet-control-locate-button--locating');\n\n      this.__disabled = true;\n      this._updateDisabled();\n    }\n\n    _setReadyState() {\n      if (!this.__locateButton || this.__locating) return;\n\n      this.__locateButton.innerHTML = this.options.locateIcon;\n      L.DomUtil.removeClass(this.__locateButton, 'leaflet-control-locate-button--locating');\n      L.DomUtil.removeClass(this.__locateButton, 'leaflet-control-locate-button--error');\n\n      this.__disabled = false;\n      this._updateDisabled();\n    }\n\n    _updateDisabled() {\n      if (!this.__locateButton) return;\n\n      if (this.__disabled) {\n        L.DomUtil.addClass(this.__locateButton, 'leaflet-control-locate-button--disabled');\n      }\n      if (!this.__disabled) {\n        L.DomUtil.removeClass(this.__locateButton, 'leaflet-control-locate-button--disabled');\n      }\n    }\n  };\n  /* Bind LocateControl klass */\n  PxMap.LocateControl = LocateControl;\n})();\n"]}