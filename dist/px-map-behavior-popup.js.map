{"version":3,"sources":["px-map-behavior-popup.es6.js"],"names":["window","PxMapBehavior","PopupImpl","properties","closeOnControlInteract","type","Boolean","value","addInst","parent","getPopup","elementInst","bindPopup","controlClickFn","_handleControlClick","bind","bindEvents","_mapToAdd","removeInst","unbindPopup","closePopup","Popup","Layer","InfoPopupImpl","title","String","observer","description","imgSrc","createInst","options","PxMap","InfoPopup","updateInst","lastOptions","nextOptions","updates","Object","keys","length","updateSettings","getInstOptions","styleScope","isShadyScoped","getShadyScope","undefined","DataPopupImpl","data","canAddInst","DataPopup","dataHash","_getValidData","JSON","stringify","console","log","is","settings","_createPopup","map","__addShadyScope","Polymer","Element","srcPane","getPane","srcFn","appendChild","el","d","dom","L","prototype","onAdd","call","_map","_content","srcNode","_contentNode","fakeNode","innerHTML","DivOverlay","_updateContent","content","_generatePopupContent","className","maxWidth","minWidth","initialize","setContent","tmplFnIf","fn","vals","imgTmpl","titleTmpl","descriptionTmpl","assign","update","config","dataTmpl","dataList","reduce","accum","key","concat","dataItemTmpl","join","label","isOpen","_close"],"mappings":"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","file":"px-map-behavior-popup.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2018, General Electric\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function() {\n  'use strict';\n\n  /****************************************************************************\n   * BEHAVIORS\n   ****************************************************************************/\n\n  /* Ensures the behavior namespace is created */\n  window.PxMapBehavior = (window.PxMapBehavior || {});\n\n  /**\n   *\n   * @polymerBehavior PxMapBehavior.Popup\n   */\n  PxMapBehavior.PopupImpl = {\n    properties: {\n      /**\n       * If set to `true`, the popup will be automatically closed when the user\n       * interacts with any control buttons (e.g. zoom buttons or locate button).\n       * By default, the popup only closes when the user clicks the map.\n       */\n      closeOnControlInteract: {\n        type: Boolean,\n        value: false\n      }\n    },\n\n    addInst(parent) {\n      if (parent && parent.getPopup && (parent.getPopup() !== this.elementInst)) {\n        parent.bindPopup(this.elementInst);\n\n        // Bind custom events for this cluster. Events will be unbound automatically.\n        const controlClickFn = this._handleControlClick.bind(this, parent);\n        this.bindEvents({\n          'controlclick' : controlClickFn\n        }, parent._mapToAdd);\n      }\n    },\n\n    removeInst(parent) {\n      if (parent && parent.getPopup && (parent.getPopup() === this.elementInst)) {\n        parent.unbindPopup(this.elementInst);\n      }\n    },\n\n    _handleControlClick(parent) {\n      if (this.closeOnControlInteract && parent && parent.closePopup) {\n        parent.closePopup();\n      }\n    }\n  };\n  /* Bind Popup behavior */\n  /** @polymerBehavior */\n  PxMapBehavior.Popup = [\n    PxMapBehavior.Layer,\n    PxMapBehavior.PopupImpl\n  ];\n\n  /**\n   *\n   * @polymerBehavior PxMapBehavior.InfoPopup\n   */\n  PxMapBehavior.InfoPopupImpl = {\n    properties: {\n      /**\n       * Title text to display in bold at the top of the popup. Should be kept\n       * relatively short (25 characters or less) to keep the popup from\n       * growing too large.\n       *\n       * @type {String}\n       */\n      title: {\n        type: String,\n        observer: 'shouldUpdateInst'\n      },\n\n      /**\n       * Description text to place in the body of the popup. Try to keep the\n       * description to a reasonable size to keep the popup from growing\n       * too large.\n       *\n       * To display more information, bind to the popup's parent layer (e.g. a marker)\n       * tapped event and display more information in the UI of your application.\n       *\n       * @type {String}\n       */\n      description: {\n        type: String,\n        observer: 'shouldUpdateInst'\n      },\n\n      /**\n       * The URL for an image to be placed inside the popup. Use a small, square\n       * thumbnail-style image (e.g. 75px by 75px). You may use any image type\n       * that you would put in an html\n       * <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img\"\n       * target=\"_blank\">`<img>`</a> tag.\n       *\n       * @type {String}\n       */\n      imgSrc: {\n        type: String,\n        observer: 'shouldUpdateInst'\n      }\n    },\n\n    createInst(options) {\n      return new PxMap.InfoPopup(options);\n    },\n\n    updateInst(lastOptions, nextOptions) {\n      let updates = {};\n\n      if (lastOptions.title !== nextOptions.title) {\n        updates.title = nextOptions.title;\n      }\n      if (lastOptions.description !== nextOptions.description) {\n        updates.description = nextOptions.description;\n      }\n      if (lastOptions.imgSrc !== nextOptions.imgSrc) {\n        updates.imgSrc = nextOptions.imgSrc;\n      }\n\n      if (Object.keys(updates).length) {\n        this.elementInst.updateSettings(updates);\n      }\n    },\n\n    getInstOptions() {\n      return {\n        title: this.title,\n        description: this.description,\n        imgSrc: this.imgSrc,\n        styleScope: this.isShadyScoped() ? this.getShadyScope() : undefined\n      };\n    }\n  };\n  /* Bind InfoPopup behavior */\n  /** @polymerBehavior */\n  PxMapBehavior.InfoPopup = [\n    PxMapBehavior.Popup,\n    PxMapBehavior.InfoPopupImpl\n  ];\n\n  /**\n   *\n   * @polymerBehavior PxMapBehavior.DataPopup\n   */\n  PxMapBehavior.DataPopupImpl = {\n    properties: {\n      /**\n       * Title text to display in bold at the top of the popup. Should be kept\n       * relatively short (25 characters or less) to keep the popup from\n       * growing too large.\n       */\n      title: {\n        type: String,\n        observer: 'shouldUpdateInst'\n      },\n\n      /**\n       * A list of key/value pairs to display in a data table. Must be in the\n       * format of an object with human-readable keys and associated values.\n       *\n       * For example, to show the name and location of a place, set this\n       * attribute to:\n       * '{ \"Name\" : \"Tokyo\", \"Location\" : \"Japan\" }'\n       *\n       * @type {Object}\n       */\n      data: {\n        type: Object,\n        value: function() { return {}; },\n        observer: 'shouldUpdateInst'\n      }\n    },\n\n    canAddInst() {\n      return this.data && typeof this.data === 'object' && Object.keys(this.data).length;\n    },\n\n    createInst(options) {\n      return new PxMap.DataPopup(options);\n    },\n\n    updateInst(lastOptions, nextOptions) {\n      let updates = {};\n\n      if (lastOptions.title !== nextOptions.title) {\n        updates.title = nextOptions.title;\n      }\n      if (lastOptions.dataHash !== nextOptions.dataHash) {\n        updates.data = nextOptions.data;\n      }\n\n      if (Object.keys(updates).length) {\n        this.elementInst.updateSettings(updates);\n      }\n    },\n\n    getInstOptions() {\n      let data = this._getValidData();\n      return {\n        title: this.title,\n        data: data,\n        dataHash: JSON.stringify(data),\n        styleScope: this.isShadyScoped() ? this.getShadyScope() : undefined\n      };\n    },\n\n    _getValidData() {\n      if (typeof this.data !== 'object') {\n        console.log(`PX-MAP CONFIGURATION ERROR:\n          You entered an invalid \\`data\\` attribute for ${this.is}. You must pass a valid object.\n          An attribute of type \\`${typeof this.data}\\` was passed.`);\n\n        return {};\n      }\n\n      return this.data;\n    }\n  };\n  /* Bind DataPopup behavior */\n  /** @polymerBehavior */\n  PxMapBehavior.DataPopup = [\n    PxMapBehavior.Popup,\n    PxMapBehavior.DataPopupImpl\n  ];\n\n  /****************************************************************************\n   * KLASSES\n   ****************************************************************************/\n\n  /* Ensures the klass namespace is created */\n  window.PxMap = (window.PxMap || {});\n\n  /**\n   *\n   * @class PxMap.InfoPopup\n   */\n  class InfoPopup extends L.Popup {\n    constructor(settings={}) {\n      super();\n      this._createPopup(settings);\n      return this;\n    }\n\n    onAdd(map) {\n      if (map.__addShadyScope && !Polymer.Element) {\n        // We need to monkey patch the node returned by `getPane().appendChild`\n        // so we can ensure that we apply the right CSS scope if we are in\n        // shady DOM. By doing this, we effectively wrap the node (which is\n        // fetched in the L.DivOverlay.onAdd method) in a function that scopes\n        // the child nodes before they are added to the map. If we don't do this,\n        // Leaflet will measure the popup before its CSS classes are applied and\n        // pan the map far too much to fit it. This is lame. :(\n        // @TODO: Remove when shady DOM support is deprecated\n        var srcPane = this.getPane();\n        var srcFn = srcPane.appendChild;\n        srcPane.appendChild = function(el) {\n          map.__addShadyScope(el, false);\n          let d = Polymer.dom(srcPane);\n          d.appendChild(el);\n        }\n      }\n\n      L.Popup.prototype.onAdd.call(this, map);\n\n      if (map.__addShadyScope && !Polymer.Element) {\n        // Restore monkey patched function\n        srcPane.appendChild = srcFn;\n      }\n    }\n\n    _updateContent() {\n      if (this._map && this._map.__addShadyScope && this._content.length) {\n        // We need to monkey patch the srcNode's `innerHTML` setter to ensure\n        // that our popup is scoped before it is drawn if we are in shady DOM.\n        // If we don't do this, Leaflet will measure the popup before its CSS\n        // classes are applied and pan the map far too much to fit it.\n        // This is also lame. :(\n        // @TODO: Remove when shady DOM support is deprecated\n        var srcNode = this._contentNode;\n        var fakeNode = {\n          innerHTML: null\n        };\n        this._contentNode = fakeNode;\n      }\n\n      L.DivOverlay.prototype._updateContent.call(this);\n\n      if (this._map && this._map.__addShadyScope && this._content.length) {\n        if (typeof fakeNode.innerHTML === 'string') {\n          Polymer.dom(srcNode).innerHTML = fakeNode.innerHTML;\n        }\n        // Restore monkey patched function\n        this._contentNode = srcNode;\n      }\n    }\n\n    // Note `createPopup` is an internet explorer native method, but deprecated\n    // so hopefully it won't cause grief\n    _createPopup(settings={}) {\n      // Assign settings and create content\n      this.settings = settings;\n      const { title, description, imgSrc, styleScope } = settings;\n      const content = this._generatePopupContent(title, description, imgSrc);\n      const className = `map-popup-info ${styleScope||''}`\n\n      const maxWidth = 400;\n      const minWidth = 300;\n\n      this.initialize({ className, maxWidth, minWidth });\n      this.setContent(content);\n    }\n\n    _generatePopupContent(title, description, imgSrc) {\n      let tmplFnIf = (fn, ...vals) =>\n        vals.length && vals[0] !== undefined ? fn.call(this, ...vals) : '';\n\n      let imgTmpl = (imgSrc) => `\n        <div class=\"map-box-info__image\">\n          <img src=\"${imgSrc}\" />\n        </div>\n      `;\n      let titleTmpl = (title) => `\n        <p class=\"map-box-info__title\">${title}</p>\n      `;\n      let descriptionTmpl = (description) => `\n        <p class=\"map-box-info__description\">${description}</p>\n      `;\n\n      return `\n        <section class=\"map-box-info\">\n          ${tmplFnIf(imgTmpl, imgSrc)}\n          <div class=\"map-box-info__content\">\n            ${tmplFnIf(titleTmpl, title)}\n            ${tmplFnIf(descriptionTmpl, description)}\n          </div>\n        </section>\n      `;\n    }\n\n    updateSettings(settings={}) {\n      Object.assign(this.settings, settings);\n      const { title, description, imgSrc, styleScope } = this.settings;\n      const content = this._generatePopupContent(title, description, imgSrc);\n\n      this.setContent(content);\n      this.update();\n    }\n  };\n  /* Bind InfoPopup klass */\n  PxMap.InfoPopup = InfoPopup;\n\n  /**\n   *\n   * @class PxMap.DataPopup\n   */\n  class DataPopup extends L.Popup {\n    constructor(settings={}) {\n      super();\n      this._createPopup(settings);\n      return this;\n    }\n\n    onAdd(map) {\n      // Don't open empty data popups\n      if (typeof this.settings.data !== 'object' || Object.keys(this.settings.data).length === 0) {\n        return;\n      }\n\n      if (map.__addShadyScope && !Polymer.Element) {\n        // We need to monkey patch the node returned by `getPane().appendChild`\n        // so we can ensure that we apply the right CSS scope if we are in\n        // shady DOM. By doing this, we effectively wrap the node (which is\n        // fetched in the L.DivOverlay.onAdd method) in a function that scopes\n        // the child nodes before they are added to the map. If we don't do this,\n        // Leaflet will measure the popup before its CSS classes are applied and\n        // pan the map far too much to fit it. This is lame. :(\n        // @TODO: Remove when shady DOM support is deprecated\n        var srcPane = this.getPane();\n        var srcFn = srcPane.appendChild;\n        srcPane.appendChild = function(el) {\n          map.__addShadyScope(el, false);\n          Polymer.dom(srcPane).appendChild(el);\n        }\n      }\n\n      L.Popup.prototype.onAdd.call(this, map);\n\n      if (map.__addShadyScope && !Polymer.Element) {\n        // Restore monkey patched function\n        srcPane.appendChild = srcFn;\n      }\n    }\n\n    _updateContent() {\n      if (this._map && this._map.__addShadyScope && this._content.length) {\n        // We need to monkey patch the srcNode's `innerHTML` setter to ensure\n        // that our popup is scoped before it is drawn if we are in shady DOM.\n        // If we don't do this, Leaflet will measure the popup before its CSS\n        // classes are applied and pan the map far too much to fit it.\n        // This is also lame. :(\n        // @TODO: Remove when shady DOM support is deprecated\n        var srcNode = this._contentNode;\n        var fakeNode = {\n          innerHTML: null\n        };\n        this._contentNode = fakeNode;\n      }\n\n      L.DivOverlay.prototype._updateContent.call(this);\n\n      if (this._map && this._map.__addShadyScope && this._content.length) {\n        if (typeof fakeNode.innerHTML === 'string') {\n          Polymer.dom(srcNode).innerHTML = fakeNode.innerHTML;\n        }\n        // Restore monkey patched function\n        this._contentNode = srcNode;\n      }\n    }\n\n    // Note `createPopup` is an internet explorer native method, but deprecated\n    // so hopefully it won't cause grief\n    _createPopup(settings={}, config={}) {\n      this.settings = settings;\n      const { title, data, styleScope } = settings;\n      const content = this._generatePopupContent(title, data);\n\n      const className = `map-popup-data ${styleScope||''}`\n      const maxWidth = 400;\n      const minWidth = 300;\n\n      this.initialize({ className, maxWidth, minWidth });\n      this.setContent(content);\n    }\n\n    _generatePopupContent(title, data) {\n      let tmplFnIf = (fn, ...vals) =>\n        vals.length && vals[0] !== undefined ? fn.call(this, ...vals) : '';\n\n      let titleTmpl = (title) => `\n        <div class=\"map-data-box__header\">\n          <h3 class=\"map-data-box__header__text\">${title}</h3>\n        </div>\n      `;\n      let dataTmpl = (data) => {\n        let dataList = Object.keys(data).reduce((accum, key) => {\n          return accum.concat([dataItemTmpl(key, data[key])]);\n        }, []).join('');\n\n        return `\n          <div class=\"map-data-box__table\">\n            ${dataList}\n          </div>\n        `;\n      };\n      let dataItemTmpl = (label, value) => `\n        <div class=\"map-data-box__table__cell\"><p>${label}</p></div>\n        <div class=\"map-data-box__table__cell\"><p>${value}</p></div>\n      `;\n\n      return `\n        <section class=\"map-box-data\">\n          ${tmplFnIf(titleTmpl, title)}\n          ${tmplFnIf(dataTmpl, data)}\n        </section>\n      `;\n    }\n\n    updateSettings(settings={}) {\n      Object.assign(this.settings, settings);\n      const { title, data } = this.settings;\n      const content = this._generatePopupContent(title, data);\n\n      if (this.isOpen() && Object.keys(data).length === 0) {\n        this._close();\n      }\n\n      this.setContent(content);\n      this.update();\n    }\n  };\n  /* Bind DataPopup klass */\n  PxMap.DataPopup = DataPopup;\n})();\n"]}