{"version":3,"sources":["px-map-behavior-marker.es6.js"],"names":["window","PxMapBehavior","PxMap","MarkerImpl","properties","lat","type","Number","notify","observer","lng","name","String","canAddInst","latLngIsValid","_canBeNum","val","isNaN","hideError","isValid","console","log","is","addInst","parent","addedFn","_handleMarkerAdded","bind","removedFn","_handleMarkerRemoved","tapFn","_handleMarkerTapped","mouseOverFn","_handleMarkerMouseOver","mouseOutFn","_handleMarkerMouseOut","bindEvents","marker","LayerImpl","call","removeInst","createInst","options","L","geometry","config","isMarker","updateInst","lastOptions","nextOptions","geomWasDefined","geomIsDefined","geomIsDifferent","elementInst","setOpacity","setLatLng","icon","setIcon","getInstOptions","getLatLng","title","getMarkerIcon","latLng","Error","detail","fire","Marker","Layer","ParentLayer","SymbolMarkerImpl","reflectToAttribute","value","markerIcon","_getMarkerIconOptions","SymbolIcon","_updateMarkerIcon","shouldUpdateInst","symbol","symbolClass","styleScope","isShadyScoped","getShadyScope","undefined","stroke","getComputedStyleValue","strokeWidth","fill","slice","color","SymbolMarker","StaticMarkerImpl","StaticIcon","StaticMarker","LocateMarkerImpl","accuracy","markerBaseIcon","CircleMarkerWithTitle","baseConfig","markerAccuracyIcon","circle","accuracyRadius","accuracyConfig","markerGroup","featureGroup","setStyle","opacity","fillOpacity","setRadius","setTitle","radius","weight","fillColor","className","LocateMarker","CircleMarker","extend","_path","innerHTML","onAdd","prototype"],"mappings":"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","file":"px-map-behavior-marker.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2018, General Electric\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function() {\n  'use strict';\n\n  /****************************************************************************\n   * BEHAVIORS\n   ****************************************************************************/\n\n  /* Ensures the behavior namespace is created */\n  window.PxMapBehavior = (window.PxMapBehavior || {});\n\n  /* Ensures the klass namespace is created */\n  window.PxMap = (window.PxMap || {});\n\n  /**\n   *\n   * @polymerBehavior PxMapBehavior.Marker\n   */\n  PxMapBehavior.MarkerImpl = {\n    properties: {\n      /**\n       * [REQUIRED] The latitude of the marker. Set a value to draw the marker at a coordinate\n       * when the map is loaded. Listen for updates to track the marker's location\n       * if the marker is draggable or created dynamically by the user.\n       *\n       * @type {Number}\n       */\n      lat: {\n        type: Number,\n        notify: true,\n        observer: 'shouldUpdateInst'\n      },\n\n      /**\n       * [REQUIRED] The longitude of the marker. Set a value to draw the marker at a coordinate\n       * when the map is loaded. Listen for updates to track the marker's location\n       * if the marker is draggable or created dynamically by the user.\n       *\n       * @type {Number}\n       */\n      lng: {\n        type: Number,\n        notify: true,\n        observer: 'shouldUpdateInst'\n      },\n\n      /**\n       * A human-readable name for this layer group. If a tooltip is attached,\n       * this name will be shown on hover over the marker.\n       *\n       * @type {String}\n       */\n      name: {\n        type: String,\n        notify: true,\n        observer: 'shouldUpdateInst'\n      }\n    },\n\n    /**\n     * Returns true if there is a valid latitude and longitude.\n     * Used by child elements to determine if they are ready to\n     * be added to their parent.\n     */\n    canAddInst() {\n      return this.latLngIsValid(this.lat, this.lng, true);\n    },\n\n    /**\n     * Returns true if val can be used as a number in L.LatLng\n     *\n     * @param {*} val\n     * @return {Boolean}\n     */\n    _canBeNum(val) {\n      return (!isNaN(val) && val !== \"\");\n    },\n\n    /**\n     * Returns true if lat and lng are valid values that can be used to set a\n     * marker's location. Prints an error if values are invalid (unless `hideError`\n     * is set to true).\n     *\n     * @param {Number} lat\n     * @param {Number} lng\n     * @param {Boolean} hideError\n     * @return {Boolean}\n     */\n    latLngIsValid(lat, lng, hideError) {\n      var isValid = (typeof lat !== 'undefined' && this._canBeNum(lat)) && (typeof lng !== 'undefined' && this._canBeNum(lng));\n      if (isValid) return true;\n      if (!hideError) {\n        console.log(`PX-MAP CONFIGURATION ERROR:\n        You entered an invalid \\`lat\\` or \\`lng\\` attribute for ${this.is}. You must pass a valid number.`);\n      }\n      return false;\n    },\n\n    // extends the layer `addInst` method to harvest and fire events when the\n    // markers are added\n    addInst(parent) {\n      // Bind custom events. Events will be unbound automatically.\n      const addedFn = this._handleMarkerAdded.bind(this);\n      const removedFn = this._handleMarkerRemoved.bind(this);\n      const tapFn = this._handleMarkerTapped.bind(this);\n      const mouseOverFn = this._handleMarkerMouseOver.bind(this);\n      const mouseOutFn = this._handleMarkerMouseOut.bind(this);\n      this.bindEvents({\n        'add' : addedFn,\n        'remove' : removedFn,\n        'click' : tapFn,\n        'mouseover' : mouseOverFn,\n        'mouseout' : mouseOutFn\n      }, this.marker);\n      // Now call layer's add\n      PxMapBehavior.LayerImpl.addInst.call(this, parent);\n    },\n\n    removeInst(parent) {\n      // Fire the removed event. If the marker is removed after its events are\n      // cleaned up we'll never hit the `_handleMarkerRemoved` function.\n      this._handleMarkerRemoved();\n\n      // Now call layer's remove\n      PxMapBehavior.LayerImpl.removeInst.call(this, parent);\n    },\n\n    /**\n     * Creates new instance of leaflet marker.\n     * Returns this.marker\n     */\n    createInst(options) {\n      this.marker = L.marker(options.geometry, options.config);\n\n      /*\n       * Used by other map elements to determine if this is a marker. Useful for\n       * looping through layers and determining which should be added to the\n       * visible bounds of the map.\n       */\n      this.marker.isMarker = true;\n\n      return this.marker;\n    },\n\n    /**\n     * Compares lastOptions with nextOptions and only updates what as changed.\n     * If marker has been removed set the opacity to 0.\n     * If marker has been added set the opacity to 1.\n     * If marker has moved or been added update the Lat and Lng.\n     * If marker icon has changed update the icon.\n     */\n    updateInst(lastOptions, nextOptions) {\n      const geomWasDefined = (typeof lastOptions.geometry === 'object');\n      const geomIsDefined = (typeof nextOptions.geometry === 'object');\n      const geomIsDifferent = (geomWasDefined && geomIsDefined &&\n        (lastOptions.geometry.lat !== nextOptions.geometry.lat || lastOptions.geometry.lng !== nextOptions.geometry.lng)\n      );\n      if (geomWasDefined && !geomIsDefined) {\n        this.elementInst.setOpacity(0);\n      }\n      if (!geomWasDefined && geomIsDefined) {\n        this.elementInst.setLatLng(nextOptions.geometry);\n        this.elementInst.setOpacity(1);\n      }\n      if (geomIsDifferent) {\n        this.elementInst.setLatLng(nextOptions.geometry);\n      }\n      if (lastOptions.config.icon !== nextOptions.config.icon) {\n        this.elementInst.setIcon(nextOptions.config.icon);\n      }\n    },\n\n    getInstOptions() {\n      const geometry = this.getLatLng();\n      const config = {};\n      config.title = (this.name || '');\n      config.icon = this.getMarkerIcon();\n\n      return { geometry, config };\n    },\n\n    // CUSTOM METHODS FOR MARKERS...\n\n    /**\n     * Returns the current latitude and longitude of the marker as an\n     * `L.LatLng` object. If either `lat` or `lng` is not defined or has an\n     * invalid value, returns undefined.\n     *\n     * @return {L.LatLng|undefined}\n     */\n    getLatLng() {\n      if (this.latLngIsValid(this.lat, this.lng)) {\n        return L.latLng(this.lat, this.lng);\n      }\n    },\n\n    // SHOULD BE IMPLEMENTED WHEN EXTENDING...\n\n    getMarkerIcon() {\n      throw new Error('The `getMarkerIcon` method must be implemented.');\n    },\n\n\n    // HANDLE EVENTS...\n\n    /**\n     * Called when the marker is added to a layer instance.\n     */\n    _handleMarkerAdded() {\n      const latLng = this.getLatLng();\n      const detail = {};\n      if (latLng) {\n        detail.latLng = latLng;\n        detail.lat = latLng.lat;\n        detail.lng = latLng.lng;\n      }\n      this.fire('px-map-marker-added', detail);\n    },\n    /**\n     * Fired when the marker is attached to a parent layer (e.g. the map).\n     *\n     *   * {Object} detail - Contains the event details\n     *   * {Number|undefined} detail.lat - Latitude of the marker\n     *   * {Number|undefined} detail.lng - Longitude of the marker\n     *   * {L.LatLng|undefined} detail.latLng - Custom Leaflet object containing the lat and lng\n     *\n     * @event px-map-marker-added\n     */\n\n    _handleMarkerRemoved() {\n      const latLng = this.getLatLng();\n      const detail = {};\n      if (latLng) {\n        detail.latLng = latLng;\n        detail.lat = latLng.lat;\n        detail.lng = latLng.lng;\n      }\n      this.fire('px-map-marker-removed', detail);\n    },\n    /**\n     * Fired when the marker is detached to a parent layer (e.g. the map) and\n     * removed from the DOM.\n     *\n     *   * {Object} detail - Contains the event details\n     *   * {Number|undefined} detail.lat - Latitude of the marker before removal\n     *   * {Number|undefined} detail.lng - Longitude of the marker before removal\n     *   * {L.LatLng|undefined} detail.latLng - Custom Leaflet object containing the lat and lng\n     *\n     * @event px-map-marker-removed\n     */\n\n    _handleMarkerTapped() {\n      const latLng = this.getLatLng();\n      const detail = {};\n      if (latLng) {\n        detail.latLng = latLng;\n        detail.lat = latLng.lat;\n        detail.lng = latLng.lng;\n      }\n      this.fire('px-map-marker-tapped', detail);\n    },\n    /**\n     * Fired when the marker is clicked or tapped by the user.\n     *\n     *   * {Object} detail - Contains the event details\n     *   * {Number|undefined} detail.lat - Latitude of the marker\n     *   * {Number|undefined} detail.lng - Longitude of the marker\n     *   * {L.LatLng|undefined} detail.latLng - Custom Leaflet object containing the lat and lng\n     *\n     * @event px-map-marker-tapped\n     */\n\n    _handleMarkerMouseOver() {\n      const latLng = this.getLatLng();\n      const detail = {};\n      if (latLng) {\n        detail.latLng = latLng;\n        detail.lat = latLng.lat;\n        detail.lng = latLng.lng;\n      }\n      this.fire('px-map-marker-mouse-over', detail);\n    },\n    /**\n     * Fired when the mouse is hovered over the marker.\n     *\n     *   * {Object} detail - Contains the event details\n     *   * {Number|undefined} detail.lat - Latitude of the marker\n     *   * {Number|undefined} detail.lng - Longitude of the marker\n     *   * {L.LatLng|undefined} detail.latLng - Custom Leaflet object containing the lat and lng\n     *\n     * @event px-map-marker-mouse-over\n     */\n\n    _handleMarkerMouseOut() {\n      const latLng = this.getLatLng();\n      const detail = {};\n      if (latLng) {\n        detail.latLng = latLng;\n        detail.lat = latLng.lat;\n        detail.lng = latLng.lng;\n      }\n      this.fire('px-map-marker-mouse-out', detail);\n    }\n    /**\n     * Fired when the mouse pointer no longer is over the pointer.\n     *\n     *   * {Object} detail - Contains the event details\n     *   * {Number|undefined} detail.lat - Latitude of the marker\n     *   * {Number|undefined} detail.lng - Longitude of the marker\n     *   * {L.LatLng|undefined} detail.latLng - Custom Leaflet object containing the lat and lng\n     *\n     * @event px-map-marker-mouse-out\n     */\n  };\n  /* Bind Marker behavior */\n  /** @polymerBehavior */\n  PxMapBehavior.Marker = [\n    PxMapBehavior.Layer,\n    PxMapBehavior.ParentLayer,\n    PxMapBehavior.MarkerImpl\n  ];\n\n  /**\n   *\n   * @polymerBehavior PxMapBehavior.SymbolMarker\n   */\n  PxMapBehavior.SymbolMarkerImpl = {\n    properties: {\n      /**\n       * The visual type of the marker. Sets the color of the marker to indicate\n       * the state of the thing it represents.\n       *\n       * - 'important' is red\n       * - 'warning' is orange\n       * - 'info' is blue\n       * - 'unknown' is gray\n       * - 'custom-n' is a custom color defined by the developer. Custom types\n       * may be defined from 'custom-0' through 'custom-100' and must be defined\n       * consecutively with no breaks between numbers.\n       *\n       * @type {String}\n       */\n      type: {\n        type: String,\n        reflectToAttribute: true,\n        value: 'info',\n        observer: '_updateMarkerIcon'\n      },\n\n      /**\n       * An svg icon from px-icon-set that will be displayed in a map marker\n       *\n       * For example, this would set the marker's symbol to an airplane icon:\n       *\n       *     'px-obj:airplane'\n       *\n       * @type {String}\n       */\n      icon: {\n        type: String,\n        observer: '_updateMarkerIcon'\n      }\n    },\n\n    /**\n     * If this.markerIcon exist return the markerIcon.\n     * If this.markerIcon doesn't exist create a new\n     * markerIcon and return it.\n     *\n     * @return {this.markerIcon}\n     */\n    getMarkerIcon() {\n      if (!this.markerIcon) {\n        const options = this._getMarkerIconOptions();\n        this.markerIcon = new PxMap.SymbolIcon(options);\n      }\n      return this.markerIcon;\n    },\n\n    /**\n     *\n     */\n    _updateMarkerIcon() {\n      if (!this.markerIcon) return;\n\n      const options = this._getMarkerIconOptions();\n      this.markerIcon = new PxMap.SymbolIcon(options);\n\n      this.shouldUpdateInst();\n    },\n\n    /**\n     *\n     */\n    _getMarkerIconOptions() {\n      let options = {\n        type: this.type,\n        symbol: this.symbolClass,\n        icon: this.icon,\n        styleScope: this.isShadyScoped() ? this.getShadyScope() : undefined,\n        stroke: this.getComputedStyleValue(\"--iron-icon-stroke-color\"),\n        strokeWidth: this.getComputedStyleValue(\"--iron-icon-stroke-width\"),\n        fill: this.getComputedStyleValue(\"--iron-icon-fill-color\")\n      };\n\n      if (this.type.slice(0,7) === \"custom-\") {\n        options.color = this.getComputedStyleValue(`--px-map-color-${this.type}`);\n      }\n\n      return options;\n    }\n  };\n\n  /* Bind SymbolMarker behavior */\n  /** @polymerBehavior */\n  PxMapBehavior.SymbolMarker = [\n    PxMapBehavior.Marker,\n    PxMapBehavior.SymbolMarkerImpl\n  ];\n\n  /**\n   *\n   * @polymerBehavior PxMapBehavior.StaticMarker\n   */\n  PxMapBehavior.StaticMarkerImpl = {\n    properties: {\n      /**\n       * The visual type of the marker. Sets the color of the marker to indicate\n       * the state of the thing it represents.\n       *\n       * - 'important' is red\n       * - 'warning' is orange\n       * - 'info' is blue\n       * - 'unknown' is gray\n       * - 'custom-n' is a custom color defined by the developer. Custom types\n       * may be defined from 'custom-0' through 'custom-100' and must be defined\n       * consecutively with no breaks between numbers.\n       *\n       * @type {String}\n       */\n      type: {\n        type: String,\n        reflectToAttribute: true,\n        value: 'info',\n        observer: '_updateMarkerIcon'\n      }\n    },\n\n    /**\n     * If this.markerIcon exist return the markerIcon.\n     * If this.markerIcon doesn't exist create a new\n     * markerIcon and return it.\n     * @return {this.markerIcon}\n     */\n    getMarkerIcon() {\n      if (!this.markerIcon) {\n        const options = this._getMarkerIconOptions();\n        this.markerIcon = new PxMap.StaticIcon(options);\n      }\n\n      return this.markerIcon;\n    },\n\n    /**\n     *\n     */\n    _updateMarkerIcon() {\n      if (!this.markerIcon) return;\n\n      const options = this._getMarkerIconOptions();\n      this.markerIcon = new PxMap.StaticIcon(options);\n\n      this.shouldUpdateInst();\n    },\n\n    /**\n     *\n     */\n    _getMarkerIconOptions() {\n      let options = {\n        type: this.type || '',\n        styleScope: this.isShadyScoped() ? this.getShadyScope() : undefined\n      };\n\n      if (this.type.slice(0,7) === \"custom-\") {\n        options.color = this.getComputedStyleValue(`--px-map-color-${this.type}`);\n      }\n\n      return options;\n    }\n  };\n  /* Bind StaticMarker behavior */\n  /** @polymerBehavior */\n  PxMapBehavior.StaticMarker = [\n    PxMapBehavior.Marker,\n    PxMapBehavior.StaticMarkerImpl\n  ];\n\n  /**\n   *\n   * @polymerBehavior PxMapBehavior.LocateMarker\n   */\n  PxMapBehavior.LocateMarkerImpl = {\n    properties: {\n      /**\n       * The accuracy margin of error in meters from the centerpoint of the\n       * location marker. (e.g. `12.23` for 12.23 meters)\n       *\n       * @type {Number}\n       */\n      accuracy: {\n        type: Number,\n        observer: 'shouldUpdateInst'\n      }\n    },\n\n    /**\n     *\n     */\n    createInst(options) {\n      // There are two different pieces that make up the locate marker: a\n      // `CircleMarker` which draws the base blue dot, and an optional `Circle`\n      // representing the accuracy of the location. They're combined together\n      // in a `FeatureGroup` to ensure they share interactive bindings like popups.\n      this.markerBaseIcon = new CircleMarkerWithTitle(options.geometry, options.baseConfig);\n      this.markerAccuracyIcon = L.circle(options.geometry, options.accuracyRadius, options.accuracyConfig);\n      this.markerGroup = L.featureGroup([this.markerAccuracyIcon, this.markerBaseIcon]);\n\n      /*\n       * Used by other map elements to determine if this is a marker. Useful for\n       * looping through layers and determining which should be added to the\n       * visible bounds of the map.\n       */\n      this.markerGroup.isMarker = true;\n\n      /*\n       * Bind the `getLatLng` method to this `FeatureGroup` instance so it can\n       * walk like a marker and talk like a marker.\n       */\n      this.markerGroup.getLatLng = this.getLatLng.bind(this);\n\n      return this.markerGroup;\n    },\n\n    /**\n     *\n     */\n    updateInst(lastOptions, nextOptions) {\n      const geomWasDefined = (typeof lastOptions.geometry === 'object');\n      const geomIsDefined = (typeof nextOptions.geometry === 'object');\n      const geomIsDifferent = (geomWasDefined && geomIsDefined &&\n        (lastOptions.geometry.lat !== nextOptions.geometry.lat || lastOptions.geometry.lng !== nextOptions.geometry.lng)\n      );\n      if (geomWasDefined && !geomIsDefined) {\n        this.markerBaseIcon.setStyle({ opacity: 0, fillOpacity: 0 });\n        this.markerAccuracyIcon.setStyle({ opacity: 0, fillOpacity: 0 });\n      }\n      if (!geomWasDefined && geomIsDefined) {\n        this.markerBaseIcon.setLatLng(nextOptions.geometry);\n        this.markerAccuracyIcon.setLatLng(nextOptions.geometry);\n        this.markerBaseIcon.setStyle(nextOptions.baseConfig);\n        this.markerAccuracyIcon.setStyle(nextOptions.accuracyConfig);\n      }\n      if (geomIsDifferent) {\n        this.markerBaseIcon.setLatLng(nextOptions.geometry);\n        this.markerAccuracyIcon.setLatLng(nextOptions.geometry);\n      }\n      if (lastOptions.accuracyRadius !== nextOptions.accuracyRadius) {\n        this.markerAccuracyIcon.setRadius(nextOptions.accuracyRadius);\n      }\n      if (lastOptions.baseConfig.title !== nextOptions.baseConfig.title) {\n        this.markerBaseIcon.setTitle(nextOptions.baseConfig.title);\n      }\n    },\n\n    /**\n     *\n     */\n    getInstOptions() {\n      // Get the geometry of the marker\n      const geometry = this.getLatLng();\n\n      // Configure the base icon. Most options are static, but the border color\n      // and fill color can be set with CSS variables.\n      const baseConfig = {};\n      baseConfig.radius = 7.5;\n      baseConfig.stroke = true;\n      baseConfig.color = this.getComputedStyleValue('--internal-px-map-marker-locate-icon-border-color');\n      baseConfig.weight = 3;\n      baseConfig.opacity = 1;\n      baseConfig.fill = true;\n      baseConfig.fillColor = this.getComputedStyleValue('--internal-px-map-marker-locate-icon-color');\n      baseConfig.fillOpacity = 1;\n      baseConfig.className = `map-marker-locate-base ${this.isShadyScoped() ? this.getShadyScope() : ''}`;\n      baseConfig.title = (this.name || '');\n\n      // Calculates the radius of the circle from the accuracy passed in and\n      // the minimum size required to draw the base marker\n      const accuracyRadius = this.accuracy || 0;\n\n      // Configure the accuracy icon\n      const accuracyConfig = {};\n      accuracyConfig.stroke = false;\n      accuracyConfig.opacity = 0;\n      accuracyConfig.fill = true;\n      accuracyConfig.fillColor = this.getComputedStyleValue('--internal-px-map-marker-locate-icon-accuracy-color');\n      accuracyConfig.fillOpacity = this.getComputedStyleValue('--internal-px-map-marker-locate-icon-accuracy-opacity');\n      accuracyConfig.className = `map-marker-locate-accuracy ${this.isShadyScoped() ? this.getShadyScope() : ''}`;\n\n      return { geometry, baseConfig, accuracyRadius, accuracyConfig };\n    }\n  };\n  /* Bind LocateMarker behavior */\n  /** @polymerBehavior */\n  PxMapBehavior.LocateMarker = [\n    PxMapBehavior.Marker,\n    PxMapBehavior.LocateMarkerImpl\n  ];\n\n  const CircleMarkerWithTitle = L.CircleMarker.extend({\n    options: {\n      title: ''\n    },\n\n    setTitle: function (title) {\n      this.options.title = title || '';\n      if (this._path && this.options.title === '') {\n        this._path.innerHTML = '';\n      }\n      if (this._path && this.options.title !== '') {\n        this._path.innerHTML = `<title>${this.options.title}</title>`;\n      }\n    },\n\n    onAdd: function() {\n      L.CircleMarker.prototype.onAdd.call(this);\n      if(this.options.title !== '') {\n        this._path.innerHTML = `<title>${this.options.title}</title>`;\n      }\n    }\n  });\n\n  /* Bind CircleMarkerWithTitle klass */\n  PxMap.CircleMarkerWithTitle = CircleMarkerWithTitle;\n\n})();\n"]}