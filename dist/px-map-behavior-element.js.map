{"version":3,"sources":["px-map-behavior-element.es6.js"],"names":["window","PxMapBehavior","ElementImpl","beforeRegister","elementInst","attached","__elAttached","detached","notifyInstReady","isReady","fire","shouldAddInst","options","__initialOptions","getInstOptions","createInst","__instEvents","__instEventsElementsMap","WeakMap","shouldRemoveInst","unbindAllEvents","shouldUpdateInst","canAddInst","lastOptions","__lastOptions","nextOptions","updateInst","Error","addInst","removeInst","extendObj","obj","Object","properties","length","assign","addProperties","extend","bindEvents","evts","target","keys","el","on","boundEvts","boundEvtEls","evtNames","forEach","evtReference","name","evtName","fn","push","set","get","evt","off","delete","isShadyScoped","Polymer","Settings","useNativeShadow","getShadyScope","Element"],"mappings":"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","file":"px-map-behavior-element.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2018, General Electric\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function() {\n  'use strict';\n\n  /****************************************************************************\n   * BEHAVIORS\n   ****************************************************************************/\n\n  /* Ensures the behavior namespace is created */\n  window.PxMapBehavior = (window.PxMapBehavior || {});\n\n  /**\n   *\n   * @polymerBehavior PxMapBehavior.Element\n   */\n  PxMapBehavior.ElementImpl = {\n    beforeRegister() {\n      /**\n       * A reference to this element's instance. The instance can be configured and\n       * attached to the map or to another instance. Events emitted by this instance\n       * will be intercepted and retargeted so they appear to come from directly from\n       * this custom element.\n       *\n       * @property elementInst\n       * @type {Object|null}\n       */\n      this.elementInst = null;\n    },\n\n    attached() {\n      this.__elAttached = true;\n    },\n\n    detached() {\n      this.__elAttached = false;\n    },\n\n    /**\n     * If this element's instance is ready to create and add to its parent,\n     * fires an event the parent will catch.\n     *\n     * @param {Boolean} isReady - If `true` instance parent will be notified\n     * @return {Boolean} - If `true` the parent was notified\n     */\n    notifyInstReady(isReady=true) {\n      if (!isReady) return false;\n      this.fire('px-map-element-ready-to-add');\n      return true;\n    },\n\n    shouldAddInst() {\n      // Create the instance, if it doesn't already exist\n      if (!this.elementInst) {\n        const options = this.__initialOptions = this.getInstOptions();\n        this.elementInst = this.createInst(options);\n        this.fire('px-map-element-instance-created');\n      }\n\n      this.__instEvents = (this.__instEvents || []);\n      this.__instEventsElementsMap = (this.__instEventsElementsMap || new WeakMap());\n    },\n\n    shouldRemoveInst() {\n      this.unbindAllEvents(this.__instEvents, this.__instEventsElementsMap);\n      this.__instEvents = null;\n      this.__instEventsElementsMap = null;\n    },\n\n    // Simple observer trigger for dynamic properties that should be synced\n    // to the instance\n\n    shouldUpdateInst() {\n      if (!this.elementInst && this.__elAttached && this.canAddInst()) {\n        this.notifyInstReady(this.canAddInst());\n      }\n      if (!this.elementInst) return;\n\n      const lastOptions = this.__lastOptions || this.__initialOptions;\n      const nextOptions = this.getInstOptions();\n\n      this.updateInst(lastOptions, nextOptions);\n\n      // Set `lastOptions` to `nextOptions` so the next time this method is called\n      // it will have access to the last options\n      this.__lastOptions = nextOptions;\n    },\n\n    // Should be implemented by behaviors/components that extend...\n\n    createInst() {\n      throw new Error('The `createInst` method must be implemented.')\n    },\n\n    updateInst() {\n      throw new Error('The `updateInst` method must be implemented.')\n    },\n\n    getInstOptions() {\n      throw new Error('The `getInstOptions` method must be implemented.')\n    },\n\n    addInst() {\n      throw new Error('The `bindInst` method must be implemented.')\n    },\n\n    removeInst() {\n      throw new Error('The `unbindInst` method must be implemented.')\n    },\n\n    // Helper methods\n\n    extendObj(obj, ...properties) {\n      if (!obj || !(obj instanceof Object)) throw new Error('The first parameter of `extendObj` must be an object to be mutated.');\n      if (properties.length) {\n        Object.assign(obj, ...properties);\n      }\n      return obj;\n    },\n\n    addProperties(...properties) {\n      this.properties = this.properties || {};\n      if (properties.length) {\n        this.extend(this.properties, ...properties)\n      }\n      return this.properties;\n    },\n\n    bindEvents(evts, target) {\n      if ((typeof evts !== 'object') || !Object.keys(evts).length) return;\n\n      const el = target || this.elementInst;\n      if (!el || !el.on) return;\n\n      const boundEvts = this.__instEvents;\n      const boundEvtEls = this.__instEventsElementsMap;\n\n      let evtNames = Object.keys(evts);\n      evtNames.forEach(evtName => {\n        let evtReference = {name: evtName, fn: evts[evtName]};\n        el.on(evtReference.name, evtReference.fn);\n        boundEvts.push(evtReference);\n        boundEvtEls.set(evtReference, el);\n      });\n    },\n\n    unbindAllEvents(boundEvts, boundEvtEls) {\n      if (!boundEvts || !boundEvts.length || !boundEvtEls) return;\n\n      boundEvts.forEach(evt => {\n        let el = boundEvtEls.get(evt);\n        if (!el || !el.off) return;\n\n        let {name, fn} = evt;\n        el.off(name, fn);\n\n        boundEvtEls.delete(evt);\n      });\n    },\n\n    /**\n     * If this component is being drawn in Shady DOM, returns true. Used to\n     * ensure the shady DOM scope classes are applied when we make DOM\n     * transactions that can't be reviewed by the scopeSubtree observer\n     * in the root `px-map` component that is the parent of all elements.\n     *\n     * @return {Boolean}\n     */\n    isShadyScoped() {\n      return !Polymer.Settings.useNativeShadow;\n    },\n\n    /**\n     * Returns the stringified shady DOM scope classes. Useful for ensuring they're\n     * applied during DOM transactions that can't be reviewed by the scopeSubtree\n     * observer in the root `px-map` component that is the parent of all elements.\n     *\n     * @return {String} A list of CSS classes separated by spaces\n     */\n    getShadyScope() {\n      return 'style-scope px-map';\n    }\n  };\n  /* Bind Element behavior */\n  PxMapBehavior.Element = [PxMapBehavior.ElementImpl];\n})();\n"]}