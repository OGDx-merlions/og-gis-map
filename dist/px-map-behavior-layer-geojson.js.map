{"version":3,"sources":["px-map-behavior-layer-geojson.es6.js"],"names":["window","PxMapBehavior","GeoJSONLayerImpl","properties","data","type","Object","observer","featureStyle","showFeatureProperties","Boolean","value","update","elementInst","shouldUpdateInst","canAddInst","keys","length","addInst","parent","addedFn","_handleFeatureAdded","bind","removedFn","_handleFeatureRemoved","bindEvents","getLayers","eachLayer","layer","fire","LayerImpl","call","createInst","options","styleAttributeProperties","getInstOptions","geojsonLayer","L","geoJson","pointToLayer","feature","latlng","featureProperties","style","attributeProperties","_getStyle","CircleMarker","onEachFeature","_bindPopup","radius","color","fillColor","weight","opacity","fillOpacity","_bindFeaturePopups","popupDataKeys","filter","hasOwnProperty","key","popupData","reduce","accum","popup","PxMap","DataPopup","title","autoPanPadding","bindPopup","_unbindFeaturePopups","_unbindPopup","getPopup","unbindPopup","updateInst","lastOptions","nextOptions","clearLayers","dataHash","featureStyleHash","addData","JSON","stringify","evt","on","_handleFeatureTapped","_handleFeaturePopupOpened","_handleFeaturePopupClosed","detail","off","target","GeoJSONLayer","Layer"],"mappings":"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","file":"px-map-behavior-layer-geojson.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2018, General Electric\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function() {\n  'use strict';\n\n  /****************************************************************************\n   * BEHAVIORS\n   ****************************************************************************/\n\n  /* Ensures the behavior namespace is created */\n  window.PxMapBehavior = (window.PxMapBehavior || {});\n\n  /**\n   *\n   * @polymerBehavior PxMapBehavior.GeoJSONLayer\n   */\n  PxMapBehavior.GeoJSONLayerImpl = {\n    properties: {\n      /**\n       * An object formatted as a GeoJSON FeatureCollection with one or more Features.\n       * Each feature can be formatted as any valid GeoJSON geometry type: Point,\n       * LineString, Polygon, MultiPoint, MultiLineString, MultiPolygon,\n       * or GeometryCollection. See the [GeoJSON spec](http://geojson.org/geojson-spec.html)\n       * for guidance on generating valid GeoJSON.\n       *\n       * Each feature should contain a `properties` object that can hold metadata\n       * about the feature. Optionally, the feature's `properties.style` can be\n       * set to an object that will be used to style the feature when it is drawn.\n       * Styles set in a feature's `properties.style` will override the styles\n       * set in the `featureStyle` attribute. See the `featureStyle` attribute\n       * documentation for a list of available style options.\n       *\n       * @type {Object}\n       */\n      data: {\n        type: Object,\n        observer: 'shouldUpdateInst'\n      },\n\n      /**\n       * An object with settings that will be used to style each feature when\n       * it is added to the map. The following options are available:\n       *\n       * - {Boolean} `stroke`: [default=true] Set to false to disable borders on polygons/circles\n       * - {String} `color`: [default=$primary-blue] Color for polygon/circle borders\n       * - {Number} `weight`: [default=2] Weight for polygon/circle borders in pixels\n       * - {Number} `opacity`: [default=1.0] Opacity for polygon/circle borders\n       * - {Boolean} `fill`: [default=true] Set to false to disable filling polygons/circles\n       * - {String} `fillColor`: [default=$dv-light-blue] Color for polygon/circle fill\n       * - {Number} `fillOpacity`: [default=0.4] Opacity for polygon/circle fill\n       * - {String} `fillRule`: [default='evenodd'] Defines how the [inside of a shape](https://developer.mozilla.org/docs/Web/SVG/Attribute/fill-rule) is determined\n       * - {String} `lineCap`: [default='round'] Defines the [shape to be used](https://developer.mozilla.org/docs/Web/SVG/Attribute/stroke-linecap) at the end of the stroke\n       * - {String} `lineJoin`: [default='round'] Defines the [shape to be used](https://developer.mozilla.org/docs/Web/SVG/Attribute/stroke-linejoin) at the corner of a stroke\n       * - {String} `dashArray`: [default=null] Defines the stroke [dash pattern](https://developer.mozilla.org/docs/Web/SVG/Attribute/stroke-dasharray)\n       * - {String} `dashOffset`: [default=null] Defines the [distance into the dash to start the dash](https://developer.mozilla.org/docs/Web/SVG/Attribute/stroke-dashoffset)\n       *\n       * Note that styles can also be added to each feature individually (see\n       * the `data` attribute documentation). Styles defined on each feature will\n       * override the `featureStyle`.\n       *\n       * @type {Object}\n       */\n      featureStyle: {\n        type: Object,\n        observer: 'shouldUpdateInst'\n      },\n\n      /**\n       * If set, a popup containing a feature's properties will be opened when\n       * the user taps that feature. The following properties will be filtered\n       * out: the property key `style` and its value; any properties with the\n       * value \"unset\" as a string.\n       *\n       * Note: A data-style popup will be used. This popup currently cannot be\n       * configured and will use its default configuration.\n       *\n       * @type {Boolean}\n       */\n      showFeatureProperties: {\n        type: Boolean,\n        value: false,\n        observer: 'shouldUpdateInst'\n      }\n    },\n\n    /**\n     * Forces the GeoJSON layer to deeply check the `data` attribute for differences\n     * in the data from the last draw, and make any necessary updates. Call this\n     * method if you are passing an object by reference to `data` and making deep\n     * updates that don't trigger property observers.\n     *\n     * @return {undef}\n     */\n    update() {\n      if (!this.elementInst) return;\n\n      this.shouldUpdateInst();\n    },\n\n    canAddInst() {\n      return this.data && typeof this.data === 'object' && Object.keys(this.data).length;\n    },\n\n    // extends the layer `addInst` method to harvest and fire events\n    addInst(parent) {\n      // Bind custom events. Events will be unbound automatically.\n      const addedFn = this._handleFeatureAdded.bind(this);\n      const removedFn = this._handleFeatureRemoved.bind(this);\n      this.bindEvents({\n        'layeradd' : addedFn,\n        'layerremove' : removedFn\n      });\n\n      // If any layers already added before events bound, manually fire layer\n      // added events to attach listeners/notify the world the layer is added\n      if (this.elementInst.getLayers().length !== 0) {\n        this.elementInst.eachLayer((layer) => {\n          this.elementInst.fire('layeradd', { layer: layer });\n        });\n      }\n\n      // Now call layer's add\n      PxMapBehavior.LayerImpl.addInst.call(this, parent);\n    },\n\n    createInst(options) {\n      const styleAttributeProperties = this.getInstOptions().featureStyle;\n\n      const geojsonLayer = L.geoJson(options.data, {\n        pointToLayer: (feature, latlng) => {\n          const featureProperties = feature.properties.style || {};\n          const attributeProperties = options.featureStyle;\n          const style = this._getStyle(feature, featureProperties, attributeProperties);\n\n          return new L.CircleMarker(latlng, style);\n        },\n\n        onEachFeature: (feature, layer) => {\n          if (!this.showFeatureProperties) return;\n          this._bindPopup(feature, layer);\n        },\n\n        style: (feature) => {\n          const featureProperties = feature.properties.style || {};\n\n          return this._getStyle(featureProperties, styleAttributeProperties);\n        }\n      });\n\n      return geojsonLayer;\n    },\n\n    _getStyle(featureProperties, attributeProperties) {\n      return {\n        radius: featureProperties.radius           || attributeProperties.radius      || 5,\n        color: featureProperties.color             || attributeProperties.color       || '#3E87E8', //primary-blue,\n        fillColor: featureProperties.fillColor     || attributeProperties.fillColor   || '#88BDE6', //$dv-light-blue\n        weight: featureProperties.weight           || attributeProperties.weight      || 2,\n        opacity: featureProperties.opacity         || attributeProperties.opacity     || 1,\n        fillOpacity: featureProperties.fillOpacity || attributeProperties.fillOpacity || 0.4\n      };\n    },\n\n    _bindFeaturePopups() {\n      if (!this.elementInst) return;\n      this.elementInst.eachLayer((layer) => this._bindPopup(layer.feature, layer));\n    },\n\n    _bindPopup(feature, layer) {\n      // Filter keys to remove info that should not be displayed in a popup.\n      // If no keys remain, do not bind a popup.\n      const popupDataKeys = Object.keys(feature.properties).filter(key => feature.properties.hasOwnProperty(key) && feature.properties[key] !== 'unset' && key !== 'style');\n      if (!popupDataKeys.length) return;\n\n      const popupData = popupDataKeys.reduce((accum, key) => {\n        accum[key] = feature.properties[key];\n        return accum;\n      }, {});\n\n      const popup = new PxMap.DataPopup({\n        title: 'Feature Properties',\n        data: popupData,\n        autoPanPadding: [1,1]\n      });\n\n      layer.bindPopup(popup);\n    },\n\n    _unbindFeaturePopups() {\n      if (!this.elementInst) return;\n      this.elementInst.eachLayer((layer) => this._unbindPopup(layer));\n    },\n\n    _unbindPopup(layer) {\n      if (typeof layer.getPopup() !== 'undefined') {\n        layer.unbindPopup();\n      }\n    },\n\n    /*\n     * Update the instance if the new data is not the same as the old OR if the\n     * new style is not the same as the old. (Stringifying is needed here to be\n     * able to do a deep equality check).\n     */\n    updateInst(lastOptions, nextOptions) {\n      if (!Object.keys(nextOptions.data).length) {\n        this.elementInst.clearLayers();\n      }\n      else if (Object.keys(nextOptions.data).length && (lastOptions.dataHash !== nextOptions.dataHash || lastOptions.featureStyleHash !== nextOptions.featureStyleHash)) {\n        const styleAttributeProperties = this.getInstOptions().featureStyle;\n\n        this.elementInst.clearLayers();\n        this.elementInst.options.style = (feature) => {\n          const featureProperties = feature.properties.style || {};\n          return this._getStyle(featureProperties, styleAttributeProperties);\n        };\n\n        this.elementInst.addData(nextOptions.data);\n        if (nextOptions.showFeatureProperties) {\n          this._bindFeaturePopups();\n        }\n      }\n      else if (lastOptions.showFeatureProperties !== nextOptions.showFeatureProperties) {\n        if (nextOptions.showFeatureProperties) this._bindFeaturePopups();\n        if (!nextOptions.showFeatureProperties) this._unbindFeaturePopups();\n      }\n    },\n\n    getInstOptions() {\n      return {\n        data: this.data || {},\n        dataHash: JSON.stringify(this.data || {}),\n        featureStyle: this.featureStyle || {},\n        featureStyleHash: JSON.stringify(this.featureStyle || {}),\n        showFeatureProperties: this.showFeatureProperties\n      };\n    },\n\n    _handleFeatureAdded(evt) {\n      if (!evt || !evt.layer) return;\n\n      // Bind layer click events\n      evt.layer.on('click', this._handleFeatureTapped.bind(this));\n      evt.layer.on('popupopen', this._handleFeaturePopupOpened.bind(this));\n      evt.layer.on('popupclose', this._handleFeaturePopupClosed.bind(this));\n\n      const detail = {};\n      if (evt.layer && evt.layer.feature) {\n        detail.feature = evt.layer.feature;\n      }\n      this.fire('px-map-layer-geojson-feature-added', detail);\n    },\n    /**\n     * Fired when a feature is attached the map. Note that every feature is\n     * added/removed when any part of the `data` attribute is updated.\n     *\n     *   * {Object} detail - Contains the event details\n     *   * {Object|undefined} detail.feature - Object containing the feature's GeoJSON source\n     *\n     * @event px-map-layer-geojson-feature-added\n     */\n\n    _handleFeatureRemoved(evt) {\n      if (!evt || !evt.layer) return;\n\n      // Unbind layer click events\n      evt.layer.off();\n\n      const detail = {};\n      if (evt.layer && evt.layer.feature) {\n        detail.feature = evt.layer.feature;\n      }\n      this.fire('px-map-layer-geojson-feature-removed', detail);\n    },\n    /**\n     * Fired when a feature is removed from the map. Note that every feature is\n     * added/removed when any part of the `data` attribute is updated.\n     *\n     *   * {Object} detail - Contains the event details\n     *   * {Object|undefined} detail.feature - Object containing the feature's GeoJSON source\n     *\n     * @event px-map-layer-geojson-feature-added\n     */\n\n    _handleFeatureTapped(evt) {\n      const detail = {};\n      if (evt.target && evt.target.feature) {\n        detail.feature = evt.target.feature;\n      }\n      this.fire('px-map-layer-geojson-feature-tapped', detail);\n    },\n    /**\n     * Fired when a feature is tapped by the user.\n     *\n     *   * {Object} detail - Contains the event details\n     *   * {Object|undefined} detail.feature - Object containing the feature's GeoJSON source\n     *\n     * @event px-map-layer-geojson-feature-tapped\n     */\n\n    _handleFeaturePopupOpened(evt) {\n      const detail = {};\n      if (evt.target && evt.target.feature) {\n        detail.feature = evt.target.feature;\n      }\n      this.fire('px-map-layer-geojson-feature-popup-opened', detail);\n    },\n    /**\n     * Fired when a feature's popup is opened by the user.\n     *\n     *   * {Object} detail - Contains the event details\n     *   * {Object|undefined} detail.feature - Object containing the feature's GeoJSON source\n     *\n     * @event px-map-layer-geojson-feature-popup-opened\n     */\n\n    _handleFeaturePopupClosed(evt) {\n      const detail = {};\n      if (evt.target && evt.target.feature) {\n        detail.feature = evt.target.feature;\n      }\n      this.fire('px-map-layer-geojson-feature-popup-closed', detail);\n    }\n    /**\n     * Fired when a feature's popup is closed by the user.\n     *\n     *   * {Object} detail - Contains the event details\n     *   * {Object|undefined} detail.feature - Object containing the feature's GeoJSON source\n     *\n     * @event px-map-layer-geojson-feature-popup-closed\n     */\n  };\n  /* Bind GeoJSONLayer behavior */\n  /** @polymerBehavior */\n  PxMapBehavior.GeoJSONLayer = [\n    PxMapBehavior.Layer,\n    PxMapBehavior.GeoJSONLayerImpl\n  ];\n})();\n"]}